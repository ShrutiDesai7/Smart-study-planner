# -*- coding: utf-8 -*-
"""Smart-study-planner.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oofUCuTM0A_Hh44MxFLjWxFA0FqAkEl5

# Smart Study Planner
"""

from datetime import datetime

def get_input():
    print("Welcome to the Smart Study Planner!\n")
    subjects = []
    n = int(input("Enter number of subjects: "))

    for i in range(n):
        name = input(f"\nEnter subject {i+1} name: ")
        while True:
            try:
                difficulty = int(input(f"Rate difficulty of {name} (1-5): "))
                if 1 <= difficulty <= 5:
                    break
                else:
                    print("Please enter a number between 1 and 5.")
            except ValueError:
                print("Invalid input. Enter a number.")

        subjects.append({"name": name, "difficulty": difficulty})

    total_hours = float(input("\nEnter total study hours available per day: "))
    exam_date_str = input("Enter exam date (YYYY-MM-DD): ")

    try:
        exam_date = datetime.strptime(exam_date_str, "%Y-%m-%d")
        today = datetime.today()
        days_left = (exam_date - today).days
        if days_left <= 0:
            print("Exam date should be in the future!")
            exit()
    except ValueError:
        print("Invalid date format! Use YYYY-MM-DD.")
        exit()

    return subjects, total_hours, days_left


def calculate_plan(subjects, total_hours, days_left):
    total_difficulty = sum(sub["difficulty"] for sub in subjects)

    plan = []
    for sub in subjects:
        weight = sub["difficulty"] / total_difficulty
        daily_hours = round(total_hours * weight, 2)
        total_subject_hours = round(daily_hours * days_left, 2)
        plan.append({
            "name": sub["name"],
            "daily_hours": daily_hours,
            "total_hours": total_subject_hours
        })
    return plan


def display_plan(plan, days_left):
    print("\n Your Smart Study Plan:")
    print(f"Days until exam: {days_left}\n")
    print("{:<20} {:<15} {:<15}".format("Subject", "Hours/Day", "Total Hours"))
    print("-" * 50)
    for sub in plan:
        print("{:<20} {:<15} {:<15}".format(sub["name"], sub["daily_hours"], sub["total_hours"]))

    print("\n Tip: Focus more on high-difficulty subjects earlier, and revise easy ones near the exam!")


def main():
    subjects, total_hours, days_left = get_input()
    plan = calculate_plan(subjects, total_hours, days_left)
    display_plan(plan, days_left)


if __name__ == "__main__":
    main()